#
# (c) Copyright 2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Confirm that there is a version of vagrant installed on the system
# and store the value in the vagrant_version fact.  We also set the
# vagrant_major_minor fact which is used to determine the set of
# plugins to be installed.
#
---

- name: vagrant | get-installed-plugins | Check if plugins.json exists
  stat:
    path: "{{ vagrant_plugins.json_file }}"
  register: plugins_json_stat_result
  #changed_when: False

- name: vagrant | get-installed-plugins | Load plugins.json if found
  set_fact:
    _plugins_json: >
      {{ lookup('file', vagrant_plugins.json_file) |
         from_json | default(dict(installed={})) }}
  when:
    - plugins_json_stat_result.stat.exists

- name: vagrant | get-installed-plugins | Handle plugins.json not found
  set_fact:
    _plugins_json: >
      version: 1
      installed: {}
  when:
    - not plugins_json_stat_result.stat.exists

- name: vagrant | get-installed-plugins | Fail if plugins.json version not 1
  fail:
    msg: >
      Detected version mis-match for the ${VAGANT_HOME}/plugins.json file;
      currently we only support the version 1 plugins.json layout.
  when: _plugins_json.version | int != 1

- name: vagrant | get-installed-plugins | Determine installed plugins
  set_fact:
    _installed_plugins: >
      {{ _plugins_json.installed }}

- name: vagrant | get-installed-plugins | Determine plugins to install/update
  set_fact:
    _missing_plugins: >
      {%- set _missing = []  %}
      {%- for plugin in vagrant_plugins.stream[vagrant_major_minor] %}
      {%-   if _installed_plugins[plugin.name] is not defined %}
      {%-     set _ = _missing.append(plugin) %}
      {%-   else %}
      {%-     set _installed = _installed_plugins[plugin.name] %}
      {%-     set gem_version = _installed_plugins[plugin.name] %}
      {%-     if _installed.installed_gem_version is defined %}
      {%-       set gem_version = _installed.installed_gem_version %}
      {%-     else %}
      {%-       set gem_version = _installed.gem_version %}
      {%-     endif %}
      {%-     if gem_version != plugin.version %}
      {%-       set _ = _missing.append(plugin) %}
      {%-     elif _installed.vagrant_version != vagrant_version %}
      {%-       set _ = _missing.append(plugin) %}
      {%-     endif %}
      {%-   endif %}
      {%- endfor %}
      {{- _missing -}}

- debug:
    var: _missing_plugins

- name: vagrant | get-installed-plugins | Install missing plugins
  command: >
    vagrant plugin install
    {% if item.gem is defined %}
    {{ item.gem }}
    {%- else -%}
    {{ item.name }}
    {%- endif  %}
    --plugin-version {{ item.version }}
  with_items: _missing_plugins
